@use '@/styles/abstracts/variables' as *;
@use 'sass:color';

// Mixin for handling flexbox layouts
@mixin flex-center($direction: row, $justify: center, $align: center) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// Mixin for setting a responsive container
@mixin container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: $spacing-4;
  padding-left: $spacing-4;

  @media (min-width: $breakpoint-lg) {
    max-width: $breakpoint-lg;
  }
}

// Mixin for reusable button styles
@mixin button-base($background-color: $color-primary, $text-color: $color-background, $padding-x: $spacing-4, $padding-y: $spacing-2) {
  background-color: $background-color;
  color: $text-color;
  padding: $padding-y $padding-x;
  border: none;
  border-radius: $border-radius-md;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  cursor: pointer;
  transition: background-color $transition-fast, color $transition-fast, box-shadow $transition-base;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;

  &:hover {
    background-color: color.scale($background-color, $lightness: -10%);
  }

  &:disabled {
    background-color: color.scale($background-color, $lightness: -20%);
    cursor: not-allowed;
    opacity: 0.7;
  }
}

// Mixin for box shadows based on theme mode
@mixin box-shadow-mode($mode: light) {
  @if $mode == light {
    box-shadow: $box-shadow-light;
  } @else if $mode == dark {
    box-shadow: $box-shadow-dark;
  }
}

@mixin input-base($background-color: $color-background, $border-color: $color-border) {
  display: block;
  width: 100%;
  padding: $spacing-2 $spacing-3;
  font-size: $font-size-base;
  line-height: 1.5;
  color: $color-text;
  background-color: $color-background;
  border: 1px solid $color-border;
  border-radius: $border-radius-md;
  transition: border-color $transition-fast, box-shadow $transition-fast;

  &:focus {
    outline: none;
    border-color: $color-primary;
    box-shadow: 0 0 0 2px color.scale($color-primary, $alpha: 25%);
  }

  &:disabled {
    background-color: color.scale($color-background, $lightness: -10%);
    cursor: not-allowed;
    opacity: 0.6;
  }
}


// Mixin for input fields
@mixin input-field {
  width: 100%;
  padding: $spacing-2;
  border-radius: $border-radius-sm;
  border: 1px solid $color-border;
  transition: border-color $transition-base;

  &:focus {
    border-color: $color-primary;
    outline: none;
    box-shadow: 0 0 0 2px rgba($color-primary, 0.2);
  }
}

// Mixin for gradient backgrounds
@mixin gradient-background($color1, $color2) {
  background: linear-gradient(135deg, $color1, $color2);
}

// Mixin for responsive media queries
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  } @else if $breakpoint == 2xl {
    @media (min-width: $breakpoint-2xl) {
      @content;
    }
  }
}

// Mixin for smooth transitions
@mixin smooth-transition {
  transition: all $transition-base ease;
}
