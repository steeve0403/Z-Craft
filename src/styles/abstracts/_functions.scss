@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;
@use 'sass:color';

// Functions for Utility and Reusability

// Function to Convert px to rem
// Helps maintain consistent units across the project
@function rem-calc($px-value) {
  @return $px-value / 16 * 1rem;
}

// Function to Create Color Variants
// Lightens or darkens a color by a given percentage
@function color-variant($color, $percentage) {
  @return color.mix(white, $color, $percentage);
}

// Spacing Utility Function
// Returns spacing values based on a multiplier for consistent padding/margin
@function spacing($spacing-values, $multiplier) {
  @return map-get($spacing-values, $multiplier);
}

// Responsive Value Utility Function
// Returns responsive values based on breakpoint map
@function responsive-value($values, $breakpoint) {
  @return map-get($values, $breakpoint);
}

// Function to Generate Glassmorphic Background
// Creates a semi-transparent background with optional blur effect for glassmorphic elements
@function glassmorphic-background($color, $blur: $blur-glass) {
  @return (
          background: $color,
          backdrop-filter: blur($blur)
  );
}

// Function to Generate Glass Shadow Effect
// Custom shadow to simulate the floating glass effect
@function glass-shadow($shadow-type: light) {
  @if $shadow-type == 'strong' {
    @return $box-shadow-strong-glass;
  } @else {
    @return $box-shadow-glass;
  }
}

// Function to Adjust Text Contrast
// Ensures text remains readable on semi-transparent backgrounds
@function adjust-text-contrast($background, $light-text: $color-text-light, $dark-text: $color-text-dark) {
  @if color.luminance($background) > 0.5 {
    @return $dark-text;
  } @else {
    @return $light-text;
  }
}

// Function for Gradient Backgrounds
// Generates a gradient background for elements to enhance glassmorphism depth
@function gradient-background($color1, $color2, $angle: 135deg) {
  @return linear-gradient($angle, $color1, $color2);
}
