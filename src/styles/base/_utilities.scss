@use 'sass:color';
@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

// Text alignment utilities
.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

// Margin utilities
@mixin margin-utilities($spacing-map) {
  @each $key, $value in $spacing-map {
    .mb-#{$key} {
      margin-bottom: $value;
    }
    .mt-#{$key} {
      margin-top: $value;
    }
    .ml-#{$key} {
      margin-left: $value;
    }
    .mr-#{$key} {
      margin-right: $value;
    }
    .mx-#{$key} {
      margin-left: $value;
      margin-right: $value;
    }
    .my-#{$key} {
      margin-top: $value;
      margin-bottom: $value;
    }
  }
}

@include margin-utilities((1: $spacing-1, 2: $spacing-2, 4: $spacing-4, 6: $spacing-6, 8: $spacing-8, 10: $spacing-10, 12: $spacing-12));

// Padding utilities
@mixin padding-utilities($spacing-map) {
  @each $key, $value in $spacing-map {
    .pb-#{$key} {
      padding-bottom: $value;
    }
    .pt-#{$key} {
      padding-top: $value;
    }
    .pl-#{$key} {
      padding-left: $value;
    }
    .pr-#{$key} {
      padding-right: $value;
    }
    .px-#{$key} {
      padding-left: $value;
      padding-right: $value;
    }
    .py-#{$key} {
      padding-top: $value;
      padding-bottom: $value;
    }
  }
}

@include padding-utilities((1: $spacing-1, 2: $spacing-2, 4: $spacing-4, 6: $spacing-6, 8: $spacing-8, 10: $spacing-10, 12: $spacing-12));

// Width utilities
.w-full {
  width: 100%;
}

.w-auto {
  width: auto;
}

// Flex utilities
.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.justify-between {
  justify-content: space-between;
}

.justify-center {
  justify-content: center;
}

// Visibility utilities
.hidden {
  display: none;
}

// Utility for spacing between elements (e.g., grid or flex children)
.space-y-2 > * + * {
  margin-top: $spacing-2;
}

.space-y-4 > * + * {
  margin-top: $spacing-4;
}

.space-y-6 > * + * {
  margin-top: $spacing-6;
}

.space-y-8 > * + * {
  margin-top: $spacing-8;
}

// Responsive utilities
@mixin responsive-utilities($breakpoints) {
  @each $name, $breakpoint in $breakpoints {
    @media (min-width: $breakpoint) {
      .bp-#{$name}\:flex {
        display: flex;
      }
      .bp-#{$name}\:hidden {
        display: none;
      }
      .bp-#{$name}\:block {
        display: block;
      }
    }
  }
}

@include responsive-utilities($breakpoints);

// Glassmorphism Utilities
.glass {
  background: $color-background-glass;
  backdrop-filter: blur($blur-glass);
  border-radius: $border-radius-glass;
  box-shadow: $box-shadow-glass;
  border: 1px solid $color-border-glass;
}

.strong-glass {
  background: $color-overlay;
  backdrop-filter: blur($blur-glass-strong);
  border-radius: $border-radius-xl;
  box-shadow: $box-shadow-strong-glass;
  border: 1px solid $color-border-glass;
}

// Dark mode utilities
.dark {
  background-color: $color-background-dark;
  color: $color-text-dark;

  .header, .footer, .cv-list__item, .cv-preview {
    background-color: color.adjust($color-background-dark, $lightness: 5%);
  }

  .input, .textarea {
    background-color: $color-background-dark;
    color: $color-text-dark;
    border-color: color.adjust($color-background-dark, $lightness: 10%);

    &:focus {
      border-color: $color-primary-dark;
      box-shadow: 0 0 0 2px rgba($color-primary-dark, 0.25);
    }
  }

  .card, .button, .input {
    box-shadow: $box-shadow-dark;
  }
}

// Light mode (default)
.light {
  background-color: $color-background;
  color: $color-text;

  .header, .footer, .cv-list__item, .cv-preview {
    background-color: color.adjust($color-background, $lightness: -5%);
  }

  .input, .textarea {
    background-color: $color-background;
    color: $color-text;
    border-color: $color-border;

    &:focus {
      border-color: $color-primary;
      box-shadow: 0 0 0 2px rgba($color-primary, 0.25);
    }
  }

  .card, .button, .input {
    box-shadow: $box-shadow-light;
  }
}

// Button hover effect
.button {
  @include hover-effect;
}

// Text color utilities for glassmorphism
.text-glass {
  color: $color-text-glass;
}

// Overlay utilities for glass effects
.glass-overlay {
  background: $color-overlay;
  opacity: $opacity-glass-layer;
  backdrop-filter: blur($blur-glass);
  z-index: $z-index-glass-overlay;
}

// Smooth Transition Utility
.smooth-transition {
  @include smooth-transition;
}

// Responsive Padding Utility for Cards
@mixin responsive-padding($breakpoints) {
  @each $name, $breakpoint in $breakpoints {
    @media (min-width: $breakpoint) {
      .bp-#{$name}\:p-6 {
        padding: $spacing-6;
      }
    }
  }
}

@include responsive-padding($breakpoints);
